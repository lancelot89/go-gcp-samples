steps:
  # Start Firestore Emulator for testing
  - name: 'gcr.io/cloud-builders/docker'
    args: ["compose", "-f", "v2-firestore/docker-compose.fire.yml", "up", "-d"]
    dir: "."

  # Wait for Firestore Emulator to be ready (optional, but good practice)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        for i in $(seq 1 10); do
          curl -s http://localhost:8080 > /dev/null && break
          echo "Waiting for Firestore Emulator..."
          sleep 5
        done

  # Run tests with Firestore Emulator
  - name: 'gcr.io/cloud-builders/go'
    env: ["FIRESTORE_EMULATOR_HOST=localhost:8080"]
    args: ["test", "./..."]
    dir: "v2-firestore"

  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/v2-firestore-service:$COMMIT_SHA'
      - '.'
    dir: "."

  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/v2-firestore-service:$COMMIT_SHA'
    dir: "."

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'v2-firestore-service'
      - '--image'
      - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/v2-firestore-service:$COMMIT_SHA'
      - '--region'
      - 'asia-northeast1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars=PROJECT_ID=$PROJECT_ID' # Pass PROJECT_ID to the Cloud Run service
    dir: "."

options:
  logging: CLOUD_LOGGING_ONLY
